package iskanderzhuma

import (
	"fmt"
	"go.uber.org/zap"
	"regexp"
	"strconv"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

func sumDigits(number int) int {
	sumResult := 0
	if number == 0 {
		return 0
	}
	sumResult = number%10 + sumDigits(number/10)
	if sumResult > 9 {
		sumResult = sumResult%10 + sumDigits(sumResult/10)
	}
	return sumResult
}

func getMissionResult(digits string) string {
	convertToInt, _ := strconv.Atoi(digits)
	return strconv.Itoa(sumDigits(convertToInt))
}

func getMindResult(digits string) string {
	convertToInt, _ := strconv.Atoi(digits[0:2])
	return strconv.Itoa(sumDigits(convertToInt))
}

func (b *Bot) CalcDateCmd(upd tgbotapi.Update) {
	var message, requestMsg string
	digits := regexp.MustCompile(`\D+`).ReplaceAllString(upd.Message.Text, "")
	if len(digits) == 8 {
		mindResult := getMindResult(digits)
		mindResultInt, _ := strconv.Atoi(mindResult)

		missionResult := getMissionResult(digits)
		missionResultInt, _ := strconv.Atoi(missionResult)

		message = `
<b>–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç:</b>

<b>–ß–∏—Å–ª–æ –°–æ–∑–Ω–∞–Ω–∏—è: ` + mindResult + `</b>
` + getMindDecision(mindResultInt) + `

<b>–ß–∏—Å–ª–æ –ú–∏—Å—Å–∏–∏: ` + missionResult + `</b>
` + getMissionDecision(missionResultInt) + `

üì≤ –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –±–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.`

	} else if len(digits) == 10 || len(digits) == 11 {
		requestMsg = `
–ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê.
–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ` + upd.Message.Text

		message = `–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ! –í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –í–∞–º–∏. üòä`
	} else {
		message = `–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç.`
	}

	reply := tgbotapi.NewMessage(upd.Message.Chat.ID, fmt.Sprintf(message))
	reply.ParseMode = "html"
	reply.DisableWebPagePreview = true

	if err := b.apiRequest(reply); err != nil {
		b.logger.Error("failed to send start message", zap.Error(err))
	}

	if len(requestMsg) > 0 {
		replyRequest := tgbotapi.NewMessage(432101609, fmt.Sprintf(requestMsg))
		replyRequest.ParseMode = "html"
		replyRequest.DisableWebPagePreview = true

		if err := b.apiRequest(replyRequest); err != nil {
			b.logger.Error("failed to send start message", zap.Error(err))
		}
	}
}
